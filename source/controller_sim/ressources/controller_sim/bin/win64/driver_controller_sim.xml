<?xml version="1.0"?>
<doc>
    <assembly>
        "controller_sim"
    </assembly>
    <members>
        <member name="M:HmdDriverFactory(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*)">
 La fonction qui sera exportée vers OpenVR, il s'agit de
 notre point d'entrée! (void main() en gros)

 Elle va récupérer des pointeurs vers des classes prédéfinies pour les charger dans SVR

</member>
        <member name="M:Controller_simDriverServer.Init(vr.IVRDriverContext*)">
reference: https://github.com/ValveSoftware/openvr/wiki/IServerTrackedDeviceProvider_Overview
Il s'agit du serveur qui va contrôler les différents appareils, car il peut y en avoir plusieurs par
serveur.

</member>
        <member name="M:DoMoDriver.UpdateInternalValuesFromPipedData(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;)">
Cette fonction gère la mise à jour de valeurs par celles reçues du tunnel nommé


Met à jour les valeurs de position, de rotation et de latence d'un driver (appareil), et renvoie les valeurs inutilisées

</member>
        <member name="M:DoMoDriver.RunFrameStub">
Cette fonction gère la mise à jour des valeurs d'entrée à chaque frame du jeu


Cette fonction gère la mise à jour des valeurs d'entrée à chaque frame du jeu

</member>
        <member name="T:Quaternion">
maths.h functions and definitions
used mainly for mathematic angle conversions

</member>
        <member name="M:DriverLog(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
@author Valve corporation
@brief defines the HMD_DLL_EXPORT/IMPORT types which serve as entry points for the DLL
@version 0.1
@date 16/12/2021

</member>
        <member name="F:ATL.CRegKey.m_pTM">
            <summary>
Pointer to CAtlTransactionManager object</summary>
        </member>
        <member name="M:ATL.CRegKey.#ctor(ATL.CAtlTransactionManager*)">
            <summary>
CRegKey constructor</summary>
            <param name="pTM">Pointer to CAtlTransactionManager object</param>
        </member>
    </members>
</doc>